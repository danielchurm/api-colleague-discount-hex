// Code generated by MockGen. DO NOT EDIT.
// Source: healthcheck.go

// Package mock_healthcheck is a generated GoMock package.
package mock_healthcheck

import (
	reflect "reflect"

	healthcheck "github.com/JSainsburyPLC/smartshop-api-colleague-discount/healthcheck"
	gomock "github.com/golang/mock/gomock"
)

// MockHealthChecker is a mock of HealthChecker interface.
type MockHealthChecker struct {
	ctrl     *gomock.Controller
	recorder *MockHealthCheckerMockRecorder
}

// MockHealthCheckerMockRecorder is the mock recorder for MockHealthChecker.
type MockHealthCheckerMockRecorder struct {
	mock *MockHealthChecker
}

// NewMockHealthChecker creates a new mock instance.
func NewMockHealthChecker(ctrl *gomock.Controller) *MockHealthChecker {
	mock := &MockHealthChecker{ctrl: ctrl}
	mock.recorder = &MockHealthCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthChecker) EXPECT() *MockHealthCheckerMockRecorder {
	return m.recorder
}

// GetHealth mocks base method.
func (m *MockHealthChecker) GetHealth() (healthcheck.Health, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealth")
	ret0, _ := ret[0].(healthcheck.Health)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHealth indicates an expected call of GetHealth.
func (mr *MockHealthCheckerMockRecorder) GetHealth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealth", reflect.TypeOf((*MockHealthChecker)(nil).GetHealth))
}
